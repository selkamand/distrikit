% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zscores.R
\name{compute_zscore_robust}
\alias{compute_zscore_robust}
\title{Robust Z-Score Calculation}
\usage{
compute_zscore_robust(x, na.rm = TRUE, constant = 1.4826)
}
\arguments{
\item{x}{Numeric vector containing the dataset for which robust Z-scores will be calculated.}

\item{na.rm}{Logical, indicating whether NA values should be removed before calculations.}

\item{constant}{Scale factor applied to the MAD. The default (1.4826) is used to make MAD approximate STDEV.}
}
\value{
Numeric vector of robust Z-scores.
}
\description{
Calculate robust Z-scores for a given dataset. Center the dataset such that
median = 0, and scale the dataset based on the Median Absolute Deviation (MAD).
}
\details{
Standard Z-Score: Center your dataset such that mean = 0, scale the dataset based on
standard deviation (average distance from the mean).

Robust Z-Score: Center your dataset such that median = 0, scale the dataset based on
the MAD (median absolute deviation), where MAD is multiplied by a constant (1.4826)
to approximate SD.

If there is low variability in your dataset, the median distance from the median
of your dataset can be zero. In these cases, robust Z-scores can't be calculated
due to a divide by zero error.

To resolve this, when MAD == 0, other implementations may Mean Absolute Deviation (MeanAD) is used as a scaling
factor. MeanAD is the average distance of each point from the median.
However, we take an alternative approach. Where MAD == 0, we return -Inf/Inf/0, depending on whether distance from median is negative/positive/zero.
This is because robust zscores are commonly used for identifying extreme values by filtering for |robust_zscore| > somethreshold.
Our approach means observations such a filter will retain all observations != median.
Then you could apply secondary thresholds to handle these low-variance  cases where robust zscore isnt so useful.
}
\examples{

# Generate a sample dataset
data <- c(10, 12, 9, 11, 15, 8, 14, 10, 7)

# Calculate robust Z-scores
robust_z_scores <- compute_zscore_robust(data)
robust_z_scores

}
\seealso{
\code{\link{mad}} function from the \code{stats} package for calculating MAD.
}
\keyword{Z-score}
\keyword{dataset}
\keyword{detection}
\keyword{outlier}
\keyword{robust}
\keyword{scaling}
